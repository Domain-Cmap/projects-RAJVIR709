Problem 1: Sum of Natural Numbers up to N  
Calculate the sum of all natural numbers from 1 to n, where n is a positive integer. Use the formula:  
Sum=n×(n+1)/2.  
Take n as input and output the sum of natural numbers from 1 to n . 

Solution :  
  
#include<iostream>  
using namespace std;  
  
int main()  
{  
   cout << "Sum upto:";  
  int n;  
 cin >> n;  
   cout << "Sum of " << n << " Natural Numbers: ";  
   int sum = n * (n + 1) / 2;  
 cout << sum;  return 0;  
}  
---------------------------------------------------------------------------------------------------------------------
Problem 2:  Check if a Number is Prime.  
Check if a given number n is a prime number. A prime number is a natural number 
greater than 1 that has no positive divisors other than 1 and itself.  

Solution:
#include 
<iostream> using 
namespace std; bool 
isPrime(int n) {     if 
(n <= 1) {         
return false;  
}  
for (int i = 2; i * i <= n; i++) {         
if (n % i == 0) {             
return 
false;  
}     
}  
return true;  
} int main() 
{     
int n;  
cout << "Enter a number: ";  
cin >> n;    
 if 
(isPrime(n)) {  
cout << n << " is a prime number." << endl;  
} else {  
cout << n << " is not a prime number." << endl;  
}     
return 0;  
}  
------------------------------------------------------------------------------------------

Problem 3: Print Odd Numbers up to N.  
Print all odd numbers between 1 and n, inclusive. Odd numbers are integers that are 
not divisible by 2. These numbers should be printed in ascending order, separated 
by spaces.

Solution:

#include <iostream> using 
namespace std; void 
printOddNumbers(int n) {  
for (int i = 1; i <= n; i += 2) {         
cout << i << " ";  
}  
cout << endl;  
} int main() 
{     
int n;  
cout << "Print Odd numbers upto: ";     
cin >> n;    
 if (n < 1) {  
cout << "Invalid input! n should be greater than or equal to 1." << endl;         
return 1;  
}  
printOddNumbers(n);     
return 0;  
} 
---------------------------------------------------------------------------------------------
Problem 4:  Sum of Odd Numbers up to N.  
Calculate the sum of all odd numbers from 1 to n. An odd number is an integer 
that is not divisible by 2. The sum of odd numbers, iterate through all the numbers 
from 1 to n, check if each number is odd, and accumulate the sum.  

Solution:  

#include <iostream> using 
namespace std;  
void SumOddNumbers(int n)   
{  
int sum = 0;  
for (int i = 1; i <= n; i += 2)   
{  
sum =sum+i;  
}  
cout <<"Sum of odd numbers from 1 to "<<n<<" is "<<sum;  
} int main() 
{     
int n;  
cout << "Sum of Odd numbers upto: ";     
cin >> n;    
 if (n < 1) {  
cout << "Invalid input! n should be greater than or equal to 1." << endl;         
return 1;  
}  
SumOddNumbers(n);  
return 0;  
} 
----------------------------------------------------------------------------------------
Problem 5: Print Multiplication Table of a Number.  
Print the multiplication table of a given number n. A multiplication table for a number 
n is a list of products of n with integers from 1 to 10. For example, the multiplication 
table for 3 is:  
3×1=3,3×2=6,…,3×10=30  

Solution:

#include <iostream> using 
namespace std;  
void multiplicationTable(int n) {     
for (int i = 1; i <= 10; i++) {  
cout << n << " × " << i << " = " << n * i << endl;  
}  
} 
int main(){ 
int n;  
cout << "Enter a number: ";     
cin >> n;  
multiplicationTable(n);  
return 0;  
} 
